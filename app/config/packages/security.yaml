security:
  password_hashers:
    App\Auth\Infrastructure\Symfony\Security\Auth:
      algorithm: auto

  providers:
    app_user_provider:
      id: App\Auth\Infrastructure\Symfony\Security\UserProvider

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    login:
      pattern: ^/api/auth/(login|token/refresh)
      stateless: true
      json_login:
        check_path: /api/auth/login
        username_path: email
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    main:
      provider: app_user_provider
      stateless: true

    api:
      pattern: ^/api
      stateless: true
      jwt: ~
      logout:
        path: api_token_invalidate

  access_control:
    - { path: ^/api/auth/login, roles: PUBLIC_ACCESS }
    - { path: ^/register, roles: PUBLIC_ACCESS }
    - { path: ^/api/auth/me, roles: [ROLE_USER, ROLE_ADMIN] }
    # - { path: ^/profile, roles: ROLE_USER }

when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
